<style>
    {box-sizing: border-box;}

/* The popup form - hidden by default */
.form-popup {
  display: none;
  position: fixed;
  bottom: 0;
  right: 15px;
  border: 3px solid #f1f1f1;
  z-index: 9;
}

/* Add styles to the form container */
.form-container {
  max-width: 300px;
  padding: 10px;
  background-color: white;
}

/* Full-width input fields */
.form-container input[type=text], .form-container input[type=password] {
  width: 100%;
  padding: 15px;
  margin: 5px 0 22px 0;
  border: none;
  background: #f1f1f1;
}

/* When the inputs get focus, do something */
.form-container input[type=text]:focus, .form-container input[type=password]:focus {
  background-color: #ddd;
  outline: none;
}

/* Set a style for the submit/login button */
.form-container .btn {
  background-color: #04AA6D;
  color: white;
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  width: 100%;
  margin-bottom:10px;
  opacity: 0.8;
}

/* Add a red background color to the cancel button */
.form-container .cancel {
  background-color: red;
}

/* Add some hover effects to buttons */
.form-container .btn:hover, .open-button:hover {
  opacity: 1;
}
</style>
<div class="bottomheader">
    <header class="bottom-banner">
        <div class="songdetails">
            <div class="albumimage">
                <img src="/images/template.jpg">
            </div>
            <div class="songinfo">
                <h2 id="songTitle">Loading...</h2>
                <h4 id="artistName">Loading...</h4>
                <p id="albumName">Loading...</p>
            </div>
        </div>

        <div class="songcontrols">
            <div class="songlabels">
                <p class="left">Live Radio</p>
                <p class="right" id="djName"></p>
            </div>
            <div class="player">
                <audio controls id="radioPlayer">
                    <source src="https://playerservices.streamtheworld.com/api/livestream-redirect/WETAFM.mp3"
                        type=audio/mpeg>
                    Your browser does not support the audio element.
                </audio>
            </div>
        </div>

        <div class="songactions">
            <button class="songaction" id="songadd" onclick="openForm()">Add to Queue</button>
            <div class="form-popup" id="myForm">
                <form action="/action_page.php" class="form-container">
                  <h1>Add Song</h1>
              
                  <label for="name"><b>Song Name</b></label>
                  <input type="text" id="name" placeholder="name" name="name" required>
              
                  <label for="artist"><b>Artist</b></label>
                  <input type="text" id="artist" placeholder="artist" name="artist" required>

                  <label for="album"><b>Album</b></label>
                  <input type="text" id="album" placeholder="album" name="album" required>

                  <label for="duration"><b>Duration</b></label>
                  <input type="number" id="duration" placeholder="duration" name="duration" required>
              
                  <button type="button" class="btn" onclick="addSong()">Add</button>
                  <button type="button" class="btn cancel" onclick="closeForm()">Close</button>
                </form>
              </div>
            <!-- <button class="songaction" id="songremove" onclick="removeSong()">Remove from
                Queue</button> -->
        </div>
    </header>
</div>

<script>
    function openForm() {
  document.getElementById("myForm").style.display = "block";
}

function closeForm() {
  document.getElementById("myForm").style.display = "none";
}
    let currentSongId;

    document.addEventListener('DOMContentLoaded', async function () {
        try {
            const response = await fetch('/getRandomSong');
            const data = await response.json();

            if (data && data.name && data.artist) {
                // Update the content of the songinfo div
                document.getElementById('songTitle').textContent = data.name;
                document.getElementById('artistName').textContent = data.artist;
                document.getElementById('albumName').textContent = data.album || '';

                currentSongId = data._id;
            }
            else {
                console.error('Error fetching random song:', data);
            }
        }
        catch (error) {
            console.error('Error fetching random song:', error);
        }
    });

    // Pass the current song's ID to addPref when the button is clicked
    async function addSong() {
        const name = document.getElementById("name").value;
        const artist = document.getElementById("artist").value;
        const album = document.getElementById("album").value;
        const duration = document.getElementById("duration").value;

        try {
        const response = await fetch('/addSong', {
            method: 'POST',
            headers: {
            'Content-Type': 'application/json',
            },
            body: JSON.stringify({ name, artist, album, duration }),
        });

        if (response.ok) {
            console.log('Song added successfully');
        } else {
            console.error('Failed to add song');
        }
        } catch (error) {
        console.error(error);
        }

        closeForm();
            
    }

    function removeSong() {
        // Now, send the current song's ID to the server
        fetch('/removeSong', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ songId: currentSongId }),  // Use 'songId' as the key
        })
            .then(response => {
                if (response.ok) {
                    // location.reload();
                    return response.json();
                } 
                else {
                    return response.json().then(error => Promise.reject(error));
                }
            })
            .then(data => {
                console.log(data.message);
                alert(data.message); // Display a message to the user
            })
            .catch(error => {
                console.error('Error removing song from preferences:', error);
                alert(`Error: ${error.message}`); // Display an error message to the user
            });
            
    }
</script>